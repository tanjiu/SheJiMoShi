using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace 输出流
{    //抽象构建角色    public class OutputStream    {
        public String name=null;         public OutputStream(string name)
        {
            this.name = name;
        }
         public OutputStream()
         {
         }
        public virtual void Show()
         {
             Console.WriteLine(name);         }    }    //装饰角色     public class Decrator:OutputStream    {        public  OutputStream output;        public void Setout(OutputStream output)        {            this.output=output;        }
        public override void Show()
        {
            if (output != null)
            {
                output.Show();
            }
        }      }    //加密
    public class EncryptOutputStream :Decrator    {	   public  void Show(String b)         {
            int a = int.Parse(name);		    a=a+2;		   if(a>=(97+26))           {			 a=a-26;		   }		   Console.WriteLine(a);	    }   }   //数据输出    public class DataOutputStream :Decrator    {	   public override void Show()         {		   Console.WriteLine("数据输出");	    }   }    //文件输出    public class FileOutputStream :Decrator    {
       public override void Show()         {		   Console.WriteLine("文件输出");	    }   }//客户端
     class program     {	     static void Main(String[] args)         {
             OutputStream os = new OutputStream("s");             FileOutputStream fos=new FileOutputStream();
             DataOutputStream dos = new DataOutputStream();             EncryptOutputStream eos=new EncryptOutputStream();
             dos.Setout(os);
             fos.Setout(os);
             eos.Setout(os);
             eos.Show();

             Console.Read();	     }    }
}
