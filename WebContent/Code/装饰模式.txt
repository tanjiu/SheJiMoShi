using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace 装饰模式
{
    abstract class Component
    {
        public abstract void Operation();
    }
    class ConcreteComponent : Component
    {
        public override void Operation()
        {
            Console.WriteLine("具体对象操作");
        }
    }
    abstract class Decorator : Component
    {
        protected Component component;
        public void SetComponent(Component component)
        {
            this.component = component;
        }
        public override void Operation()
        {
            if (component != null)
            {
                component.Operation();
            }
        }
    }
    class ConcreteDecoratorA : Decorator
    {
        private string addedState;
        public override void Operation()
        {
            base.Operation();
            addedState = "new State";
            Console.WriteLine("具体装饰A的操作");
        }
    }
    class ConcreteDecoratorB : Decorator
    {
        private string addedState;
        public override void Operation()
        {
            base.Operation();
            addedState = "new State";
            Console.WriteLine("具体装饰B的操作");
        }
        private void AddedBehavior()
        {

        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            ConcreteComponent c = new ConcreteComponent();
            ConcreteDecoratorA a = new ConcreteDecoratorA();
            ConcreteDecoratorB b = new ConcreteDecoratorB();

            a.SetComponent(c);
            b.SetComponent(a);
            c.Operation();

            Console.Read();
        }
    }
}
